# Generated by Django 4.2.4 on 2024-11-29 19:44

from django.db import migrations


class Migration(migrations.Migration):
    """Change rank view to only include the best replay for each player."""
    dependencies = [
        ("replays", "0041_replay_rank_view"),
    ]

    operations = [
        migrations.RunSQL(
            sql="""
CREATE OR REPLACE VIEW replays_rank
AS
SELECT 
  row_number() over () as id, 
  replay, 
  score, 
  shot_id, 
  difficulty, 
  route_id, 
  category,
  place 
FROM 
  (
    SELECT 
      replay, 
      score, 
      shot_id, 
      difficulty, 
      route_id, 
      category, 
	  created,
      rank() OVER (
        PARTITION BY shot_id, 
        difficulty, 
        route_id, 
        category 
        ORDER BY 
          score DESC, 
          created, 
          replay
      ) as place 
    FROM 
      (
        SELECT 
          replay, 
          score, 
          shot_id, 
          difficulty, 
          route_id, 
          category, 
		  created,
          user_id 
        FROM 
          (
            SELECT 
              id as replay, 
              score, 
              shot_id, 
              difficulty, 
              route_id, 
              category, 
			  created,
              user_id, 
              rank() OVER (
                PARTITION BY shot_id, 
                difficulty, 
                route_id, 
                category, 
                user_id 
                ORDER BY 
                  score DESC, 
                  created, 
                  id
              ) as per_user_place 
            FROM 
              replays_replay 
            WHERE 
              replay_type = 1 -- FULL_GAME
              AND category = 1 -- STANDARD
              ) AS replays_ranked_per_user 
        WHERE 
          per_user_place = 1
      ) AS top_replays_per_user
  ) AS top_replays 
WHERE 
  place <= 3 
ORDER BY 
  shot_id, 
  difficulty, 
  route_id, 
  category, 
  place DESC;
""",
            reverse_sql="""
CREATE OR REPLACE VIEW replays_rank
AS
SELECT row_number() over () as id, replay, score, shot_id, difficulty, route_id, category, place
FROM (
SELECT id as replay, score, shot_id, difficulty, route_id, category, rank() OVER (PARTITION BY shot_id, difficulty, route_id, category ORDER BY score DESC, created, id) as place
FROM replays_replay
WHERE replay_type = 1  -- FULL_GAME
AND category = 1  -- STANDARD
) AS ranked
WHERE place <= 3
ORDER BY shot_id, difficulty, route_id, category, place desc
;
""",
        )
    ]
